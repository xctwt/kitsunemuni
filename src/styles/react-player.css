/* Custom React Player styles */
.react-player-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  background-color: black;
  overflow: hidden;
}

.react-player-container {
  position: relative;
  width: 100%;
  height: 100%;
}

.react-player {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  width: 100% !important;
  height: 100% !important;
  border: 1px solid var(--cs-border);
  background-color: black;
}

.react-player video {
  outline: none !important;
  height: 100% !important;
  width: 100% !important;
  object-fit: contain !important;
}

/* Hide default controls */
.react-player video::-webkit-media-controls {
  display: none !important;
}

.react-player video::-webkit-media-controls-enclosure {
  display: none !important;
}

/* Enhanced subtitle styling */
video::cue {
  font-family: Arial, sans-serif;
  font-size: 22px !important;
  font-weight: 600;
  line-height: 1.4;
  color: white;
  background-color: rgba(0, 0, 0, 0.7);
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.8);
  padding: 2px 8px;
  border-radius: 4px;
  white-space: pre-line;
}

/* Debug styling */
.debug-subtitles video::cue {
  background-color: rgba(255, 0, 0, 0.3);
  border: 2px solid yellow;
}

/* Force subtitle display in debug mode */
.debug-subtitles video::cue {
  display: inline !important;
  visibility: visible !important;
  opacity: 1 !important;
}

/* Outer subtitle container - positioned better */
.react-player-wrapper .subtitle-container {
  position: absolute;
  bottom: 60px; /* Position above controls */
  left: 50%;
  transform: translateX(-50%);
  width: 80%;
  max-width: 800px;
  text-align: center;
  z-index: 100;
  pointer-events: none;
}

/* Custom subtitle display as fallback */
.react-player-wrapper .custom-subtitle {
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 8px 16px;
  border-radius: 4px;
  margin-bottom: 8px;
  font-size: 18px;
  font-weight: 600;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.8);
  display: inline-block;
  max-width: 100%;
}

/* Force subtitle container to be visible */
.react-player video::-webkit-media-text-track-container,
.react-player video::cue-region,
.react-player *::-webkit-media-text-track-container {
  bottom: 80px !important; /* Move subtitles up to not be covered by controls */
  font-size: 200% !important;
  display: block !important;
  visibility: visible !important;
  opacity: 1 !important;
  pointer-events: none !important;
}

.react-player video::-webkit-media-text-track-display,
.react-player video::-webkit-media-text-track-display-backdrop {
  padding: 8px 16px !important;
  background-color: rgba(0, 0, 0, 0.5) !important;
  border-radius: 4px !important;
  display: inline-block !important;
  visibility: visible !important;
  opacity: 1 !important;
}

/* Force all tracks to be visible for debugging */
.debug-subtitles .react-player video::track {
  display: block !important;
  visibility: visible !important;
}

/* Loading states */
.react-player-wrapper.loading {
  opacity: 0.7;
  transition: opacity 0.3s ease;
}

.react-player-wrapper.loaded {
  opacity: 1;
  transition: opacity 0.3s ease;
}

/* Custom loading spinner */
.art-custom-loading {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

.art-spinner {
  width: 48px;
  height: 48px;
  border-radius: 0 !important;
  border: 5px solid rgba(255, 255, 255, 0.2);
  border-top-color: white;
  animation: spinner 1s linear infinite !important;
}

@keyframes spinner {
  to {transform: rotate(360deg) !important;}
}

/* Custom controls styling */
.custom-player-controls {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 10;
  opacity: 0;
  transition: opacity 0.3s ease;
  background: linear-gradient(to bottom, rgba(0,0,0,0.2) 0%, transparent 15%, transparent 80%, rgba(0,0,0,0.7) 100%);
  pointer-events: none; /* Allows clicks to pass through */
}

.custom-player-controls.visible {
  opacity: 1;
}

.custom-player-controls-top {
  position: absolute;
  top: 10px;
  right: 10px;
  z-index: 11;
  display: flex;
  justify-content: flex-end;
  pointer-events: auto; /* Re-enable pointer events */
}

.custom-player-controls-bottom {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  padding: 10px;
  z-index: 11;
  pointer-events: auto; /* Re-enable pointer events */
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.progress-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 5px;
}

.progress-slider {
  -webkit-appearance: none;
  width: 100%;
  height: 5px;
  background: rgba(255, 255, 255, 0.2);
  outline: none;
  border-radius: 0;
  cursor: pointer;
}

.progress-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 12px;
  height: 12px;
  background: white;
  cursor: pointer;
  border-radius: 0;
  transform: rotate(45deg);
}

.progress-slider::-moz-range-thumb {
  width: 12px;
  height: 12px;
  background: white;
  cursor: pointer;
  border-radius: 0;
  transform: rotate(45deg);
}

.time-display {
  display: flex;
  gap: 5px;
  font-size: 14px;
  color: white;
  justify-content: flex-end;
}

.controls-buttons {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}

.volume-container {
  display: flex;
  align-items: center;
  gap: 8px;
}

.volume-slider {
  -webkit-appearance: none;
  width: 60px;
  height: 5px;
  background: rgba(255, 255, 255, 0.2);
  outline: none;
  cursor: pointer;
  border-radius: 0;
}

.volume-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 10px;
  height: 10px;
  background: white;
  cursor: pointer;
  border-radius: 0;
  transform: rotate(45deg);
}

.volume-slider::-moz-range-thumb {
  width: 10px;
  height: 10px;
  background: white;
  cursor: pointer;
  border-radius: 0;
  transform: rotate(45deg);
}

.custom-player-controls-settings {
  display: flex;
  flex-direction: row;
  gap: 10px;
}

.control-item {
  position: relative;
  display: inline-block;
}

.control-button {
  background-color: var(--cs-window);
  border: 1px solid var(--cs-border);
  color: var(--cs-text);
  height: 36px;
  padding: 0 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
  cursor: pointer;
  transition: background-color 0.2s;
  font-size: 14px;
  font-family: var(--font-sans);
}

.play-button, .volume-button, .fullscreen-button {
  background-color: transparent;
  border: none;
  color: white;
  height: 40px;
  width: 40px;
}

.control-button:hover {
  background-color: var(--cs-highlight);
}

.play-button:hover, .volume-button:hover, .fullscreen-button:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.control-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 12px;
}

.control-label {
  display: inline-block;
  margin-left: 5px;
}

.control-menu {
  position: absolute;
  top: 100%;
  right: 0;
  width: 150px;
  background-color: var(--cs-window);
  border: 1px solid var(--cs-border);
  z-index: 12;
  margin-top: 5px;
  max-height: 300px;
  overflow-y: auto;
}

.menu-item {
  display: block;
  width: 100%;
  padding: 8px 12px;
  text-align: left;
  background: none;
  border: none;
  color: var(--cs-text);
  cursor: pointer;
  border-bottom: 1px solid rgba(255, 255, 255, 0.05);
  transition: background-color 0.2s;
}

.menu-item:hover {
  background-color: var(--cs-highlight);
}

.menu-item.active {
  background-color: var(--cs-highlight);
  font-weight: bold;
}

/* Quality button specific styles */
.quality-button {
  min-width: 80px;
}

/* Speed button specific styles */
.speed-button {
  min-width: 70px;
}

/* Subtitle button specific styles */
.subtitle-button {
  min-width: 70px;
}

/* Make the controls responsive */
@media (max-width: 768px) {
  .control-label {
    display: none;
  }
  
  .control-button {
    width: 36px;
    padding: 0;
  }
  
  .quality-button,
  .speed-button,
  .subtitle-button {
    min-width: 36px;
  }
  
  .volume-slider {
    width: 40px;
  }
}

/* Allow animations for the player */
.react-player,
.react-player *,
.react-player-wrapper,
.react-player-wrapper *,
.allow-animation,
.allow-animation * {
  animation: initial !important;
  transition: all 0.2s ease !important;
  transform: translate3d(0, 0, 0) !important;
}

/* Fix for specific React Player elements */
.react-player video[style*="transform"],
.react-player div[style*="transform"],
.react-player [style*="transform"] {
  transform: none !important;
}

/* Native controls toggle button */
.native-controls-toggle {
  position: absolute;
  top: 10px;
  right: 10px;
  z-index: 20;
}

.switch-to-custom-button {
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  border: 1px solid rgba(255, 255, 255, 0.3);
  padding: 8px 12px;
  font-size: 14px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.switch-to-custom-button:hover {
  background-color: rgba(0, 0, 0, 0.9);
  border-color: rgba(255, 255, 255, 0.5);
}

/* Debug controls placement */
.debug-controls {
  position: absolute;
  bottom: 10px;
  right: 10px;
  z-index: 20;
}

/* Styles for the native player mode */
.react-player-wrapper.native-controls video::-webkit-media-controls {
  display: flex !important;
}

.react-player-wrapper.native-controls video::-webkit-media-controls-enclosure {
  display: flex !important;
}

/* Reset transforms for native player mode */
.react-player-wrapper.native-controls .react-player video {
  transform: none !important;
}

/* Native toggle control outside the player */
.native-toggle-control {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  position: absolute;
  top: 10px;
  right: 10px;
  z-index: 30;
}

.native-toggle-button {
  background-color: var(--cs-window);
  border: 1px solid var(--cs-border);
  color: var(--cs-text);
  padding: 8px 12px;
  font-size: 14px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.native-toggle-button:hover {
  background-color: var(--cs-highlight);
}

.keyboard-shortcut-hint {
  font-size: 12px;
  color: rgba(255, 255, 255, 0.6);
  margin-top: 4px;
  padding: 0 4px;
}

/* Make sure the toggle is visible when inside the player */
.kitsune-player-container {
  position: relative;
} 